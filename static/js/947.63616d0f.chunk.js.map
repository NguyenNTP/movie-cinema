{"version":3,"file":"static/js/947.63616d0f.chunk.js","mappings":"sRA+NA,MAtNA,WACI,OAA4BA,EAAAA,EAAAA,UAAS,MAAK,eAAnCC,EAAM,KAAEC,EAAS,KACxB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KACtBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAwBP,EAAAA,EAAAA,UAAS,MAAK,eAA/BQ,EAAI,KAAEC,EAAO,KAChBC,GAAQC,EAAAA,EAAAA,MACZ,GAAkCX,EAAAA,EAAAA,UAASU,GAAM,eAA1CE,EAAS,KAAEC,EAAY,KAC9B,GAA4Bb,EAAAA,EAAAA,UAAS,MAAK,eAAnCc,EAAM,KAAEC,EAAS,KAClBC,EAAa,aACnB,GAA4ChB,EAAAA,EAAAA,UAAS,IAAG,eAAjDiB,EAAc,KAAEC,EAAiB,KACxC,GAA8ClB,EAAAA,EAAAA,UAAS,IAAG,eAAnDmB,EAAe,KAAEC,EAAkB,KACtCC,EAAS,GACTC,EAAM,GACNC,EAAe,GACbC,GAAMC,EAAAA,EAAAA,MAoGZ,OAvFAC,EAAAA,EAAAA,YAAU,WACNN,EAAmBjB,GACL,OAATK,GAAgC,OAAbL,IACpBkB,EAASlB,EAASwB,QAAO,SAAAC,GACrB,OAAOA,EAAEC,SAAWrB,CACxB,KAES,OAATA,GAA8B,OAAbL,GACjBiB,EAAmBC,EAE3B,GAAG,CAACb,KAWJkB,EAAAA,EAAAA,YAAU,WAENvB,EAAS2B,KAAI,SAAAF,GACT,OAAOL,EAAaQ,KAAKH,EAAEC,OAC/B,IACI5B,IACAqB,EAAMrB,EAAO0B,QAAO,SAACC,GACjB,OAAOL,EAAaS,SAASJ,EAAEK,GACnC,KAEAX,IAAQ,IACRpB,EAAUoB,EAElB,GAAG,CAACnB,KAGJuB,EAAAA,EAAAA,YAAU,WACN,IAAIQ,EAAS,GACTC,EAAQ,GACR9B,GACAA,EAASsB,QAAO,SAACC,GACb,OAAIpB,GACOoB,EAAEC,SAAWrB,CAE5B,IAAGmB,QAAO,SAAAC,GACN,OAAId,GACOc,EAAEK,KAAOnB,CAExB,IAAGgB,KAAI,SAAAF,GACH,OAAQM,EAAOH,KAAMH,EAAEQ,MAAMT,QAAO,SAAAU,GAC5B,GAAIzB,EACA,OAAOyB,EAAEC,WAAa1B,CAE9B,IAAKgB,EAAEK,GAEf,IAEJ,IAAK,IAAIM,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,GAAQ,EACnCL,EAAOK,GAAGC,OAAS,GACnBL,EAAMJ,KAAKG,EAAOK,EAAI,IAG9BrB,EAAkBiB,EACtB,GAAG,CAAC9B,EAAUO,KAQdc,EAAAA,EAAAA,YAAU,WACNe,MAAM,oFACDC,MAAK,SAAApB,GAAG,OAAIA,EAAIqB,MAAM,IACtBD,MAAK,SAAAE,GACF1C,EAAU0C,GACVH,MAAM,uFACDC,MAAK,SAAApB,GAAG,OAAIA,EAAIqB,MAAM,IACtBD,MAAK,SAAAE,GACFxC,EAAYwC,GACZxB,EAAmBwB,EACvB,GACR,GACR,GAAG,CAACvC,IAIAA,IAAY,iBAAKwC,UAAU,WAAU,WACjC,UAAC,IAAG,CAACA,UAAU,4BAA2B,WACtC,SAAC,IAAG,CAACA,UAAU,aAAaC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE,UAC9C,SAAC,IAAM,CAACC,aAAa,yBACbhB,GAAG,aACHiB,MAAO,CAACC,MAAO,KACfC,KAAM,QACNC,SArGC,SAACC,GACtB7C,EAAQ6C,GACRvC,EAAU,KACd,EAkGmD,SAE3Bd,GAAUA,EAAO6B,KAAI,SAACF,GAClB,OAAO,mBAAmB2B,MAAO3B,EAAEK,GAAG,SAAEL,EAAE4B,MAAtB5B,EAAEK,GAC1B,SAIZ,SAAC,IAAG,CAACY,UAAU,aAAaC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGf,GAAG,aAAY,UAC9D,SAAC,IAAU,CAACwB,YAAY,EAAOJ,SA5FvB,SAACK,EAAMC,GAC3B9C,EAAa8C,EACjB,EA0F0EC,OAAQ5C,EAAYoC,KAAM,QACxEH,aAAcY,IAAMnD,EAAOM,QAE3C,SAAC,IAAG,CAAC6B,UAAU,aAAaC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGf,GAAG,cAAa,UAC/D,SAAC,IAAM,CAAC6B,YAAY,4BACZP,MAAOzC,EACPsC,KAAM,QACNF,MAAO,CAACC,MAAO,KACfE,SAhGH,SAACC,GAClBvC,EAAUuC,EACd,EA8F+C,SAEvBnC,EAAgBW,KAAI,SAAAF,GAChB,OAAO,mBAAmB2B,MAAO3B,EAAEK,GAAG,SAAEL,EAAE4B,MAAtB5B,EAAEK,GAC1B,YAKhB,gBAAKY,UAAU,mBAAkB,SAEzBxC,EAASsB,QAAO,SAAAC,GACZ,OAAIpB,GACOoB,EAAEC,SAAWrB,CAE5B,IAAGmB,QAAO,SAAAC,GACN,OAAId,GACOc,EAAEK,KAAOnB,CAExB,IAAGa,QAAO,SAAAC,GACN,GAAIX,IAAmB,GACnB,OAAOA,EAAee,SAASJ,EAAEK,GAEzC,IACKH,KAAI,SAACF,GACF,OAAO,iBAAkBiB,UAAU,QAAO,WACrC,gBAAKA,UAAU,sBAAqB,UACjC,wBAAKjB,EAAE4B,SAGP5B,EAAEQ,MAAMT,QAAO,SAAAU,GACX,GAAIzB,EACA,OAAOyB,EAAEC,WAAa1B,CAE9B,IACKkB,KAAI,SAACO,GACF,OAAO,gBAAsBQ,UAAU,UAAS,UAC5C,gBAAKA,UAAU,UAAS,SAEhBR,EAAE0B,QAAQjC,KAAI,SAACkC,GACX,OAAO,UAAC,IAAG,CAACnB,UAAU,GAAE,WACpB,SAAC,IAAG,CAACoB,KAAM,EAAE,UACT,gBAAIpB,UAAU,MAAK,WAAC,iBAChBA,UAAU,cAAa,SAAEmB,EAAEE,UAAe,OArK1FC,EAqKyGH,EAAEI,QApK5G,QAARD,EAAgB,wBAAW,0BAuKsB,SAAC,IAAG,CAACF,KAAM,GAAIpB,UAAU,aAAY,SAE7BmB,EAAEK,SAASvC,KAAI,SAACwC,GACZ,OAAO,iBACMC,QAAS,kBAhGrEC,EAgG2FF,EAAEE,UAhGlFC,EAgG6F7C,EAAE8C,KA/F/HlD,EAAI,yBAA2BiD,EAAa,cAAgBD,QAC5DG,aAAaC,WAAW,QAFJ,IAACJ,EAAWC,CAgGoG,EAAC,SACpEH,EAAEO,UAFmBP,EAAEE,UAOxB,QAhBkBR,EAAEE,SAlKrE,IAACC,CAsLgC,OAxBK9B,EAAEC,SA4BvB,MAvCKV,EAAE4B,KA0CvB,QAMxB,C","sources":["Components/Film/Film-schedule/Film-schedule.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {DatePicker, Select, Row, Col} from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport \"./Film-schedule.scss\"\r\nimport getToday from \"../../Logic/handleDate\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {dataSchedule} from \"../../../Redux/Selector\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction FilmSchedule() {\r\n    const [lsCity, setLsCity] = useState(null);\r\n    const [lsCinema, setlsCinema] = useState([])\r\n    const schedule = useSelector(dataSchedule)\r\n    const [city, setCity] = useState(null)\r\n    let today = getToday()\r\n    const [startDate, setStartDate] = useState(today);\r\n    const [cinema, setCinema] = useState(null)\r\n    const dateFormat = \"DD/MM/YYYY\"\r\n    const [filterSchedule, setFilterSchedule] = useState([])\r\n    const [cinemaFilterArr, setCinemaFilterArr] = useState([])\r\n    let result = [];\r\n    let res = [];\r\n    let cinemaCityId = [];\r\n    const nav = useNavigate()\r\n\r\n\r\n    const convertSub = (Sub) => {\r\n        return Sub === \"sub\" ? 'Phụ đề' : 'Thuyết minh'\r\n    }\r\n\r\n    const handleChangeCity = (event) => {\r\n        setCity(event)\r\n        setCinema(null)\r\n    }\r\n\r\n    //Loc nhung cinema theo city\r\n    useEffect(() => {\r\n        setCinemaFilterArr(lsCinema)\r\n        if ((city !== null) && (lsCinema !== null)) {\r\n            result = lsCinema.filter(n => {\r\n                return n.cityId === city\r\n            })\r\n        }\r\n        if (city !== null && lsCinema !== null) {\r\n            setCinemaFilterArr(result)\r\n        }\r\n    }, [city])\r\n\r\n    const handleChangeDay = (date, dateString) => {\r\n        setStartDate(dateString)\r\n    };\r\n\r\n    const handleCinema = (event) => {\r\n        setCinema(event)\r\n    }\r\n\r\n    //Loc nhung city co cinema\r\n    useEffect(() => {\r\n\r\n        lsCinema.map(n => {\r\n            return cinemaCityId.push(n.cityId)\r\n        })\r\n        if (lsCity) {\r\n            res = lsCity.filter((n) => {\r\n                return cinemaCityId.includes(n.id)\r\n            })\r\n        }\r\n        if (res !== []) {\r\n            setLsCity(res)\r\n        }\r\n    }, [lsCinema])\r\n\r\n    //Loc ra id cua nhung rap se chieu phim do hom nay\r\n    useEffect(() => {\r\n        let tmpArr = [];\r\n        let tmpId = [];\r\n        if (schedule) {\r\n            schedule.filter((n) => {\r\n                if (city) {\r\n                    return n.cityId === city\r\n                } else return true\r\n            }).filter(n => {\r\n                if (cinema) {\r\n                    return n.id === cinema\r\n                } else return true\r\n            }).map(n => {\r\n                return (tmpArr.push((n.dates.filter(d => {\r\n                        if (startDate) {\r\n                            return d.showDate === startDate\r\n                        }\r\n                    })), n.id)\r\n                )\r\n            })\r\n        }\r\n        for (let i = 0; i < tmpArr.length; i = i + 2) {\r\n            if (tmpArr[i].length > 0) {\r\n                tmpId.push(tmpArr[i + 1])\r\n            }\r\n        }\r\n        setFilterSchedule(tmpId)\r\n    }, [schedule, startDate])\r\n\r\n    const showBookTickets = (sessionId, cinemaCode) => {\r\n        nav('/Book-Ticket?cinemaId=' + cinemaCode + '&sessionId=' + sessionId)\r\n        localStorage.removeItem(\"seat\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://vietcpq.name.vn/U2FsdGVkX19udsrsAUnUBsRg8K4HmweHVb4TTgSilDI=/cinema/city\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setLsCity(data)\r\n                fetch(\"https://vietcpq.name.vn/U2FsdGVkX19udsrsAUnUBsRg8K4HmweHVb4TTgSilDI=/cinema/cinemas\")\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        setlsCinema(data)\r\n                        setCinemaFilterArr(data)\r\n                    })\r\n            })\r\n    }, [schedule])\r\n\r\n\r\n    return (\r\n        schedule && <div className='Schedule'>\r\n            <Row className=\"Schedule-search fl fl-spw\">\r\n                <Col className=\"search-box\" xs={24} sm={12} xl={8}>\r\n                    <Select defaultValue=\"Cả nước\"\r\n                            id=\"find-citys\"\r\n                            style={{width: 200}}\r\n                            size={\"large\"}\r\n                            onChange={handleChangeCity}>\r\n                        {\r\n                            lsCity && lsCity.map((n) => {\r\n                                return <option key={n.id} value={n.id}>{n.name}</option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Col>\r\n                <Col className=\"search-box\" xs={24} sm={12} xl={8} id=\"find-dates\">\r\n                    <DatePicker allowClear={false} onChange={handleChangeDay} format={dateFormat} size={'large'}\r\n                                defaultValue={dayjs(today, dateFormat)}/>\r\n                </Col>\r\n                <Col className=\"search-box\" xs={24} sm={24} xl={8} id=\"find-cinema\">\r\n                    <Select placeholder=\"Tất cả rạp\"\r\n                            value={cinema}\r\n                            size={\"large\"}\r\n                            style={{width: 200}}\r\n                            onChange={handleCinema}>\r\n                        {\r\n                            cinemaFilterArr.map(n => {\r\n                                return <option key={n.id} value={n.id}>{n.name}</option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"Schedule-content\">\r\n                {\r\n                    schedule.filter(n => {\r\n                        if (city) {\r\n                            return n.cityId === city\r\n                        } else return true\r\n                    }).filter(n => {\r\n                        if (cinema) {\r\n                            return n.id === cinema\r\n                        } else return true\r\n                    }).filter(n => {\r\n                        if (filterSchedule !== []) {\r\n                            return filterSchedule.includes(n.id)\r\n                        }\r\n                    })\r\n                        .map((n) => {\r\n                            return <div key={n.name} className='mb-60'>\r\n                                {<div className=\" fs-13 title-cinema\">\r\n                                    <h3>{n.name}</h3>\r\n                                </div>}\r\n                                {\r\n                                    n.dates.filter(d => {\r\n                                        if (startDate) {\r\n                                            return d.showDate === startDate\r\n                                        }\r\n                                    })\r\n                                        .map((d) => {\r\n                                            return <div key={d.showDate} className=\"CardDay\">\r\n                                                <div className='boxDate'>\r\n                                                    {\r\n                                                        d.bundles.map((b) => {\r\n                                                            return <Row className=\"\" key={b.version}>\r\n                                                                <Col span={5}>\r\n                                                                    <h5 className=\"sub\"><span\r\n                                                                        className=\"sub t-upper\">{b.version}</span> - {convertSub(b.caption)}\r\n                                                                    </h5>\r\n                                                                </Col>\r\n                                                                <Col span={19} className=\"movie-time\">\r\n                                                                    {\r\n                                                                        b.sessions.map((t) => {\r\n                                                                            return <span key={t.sessionId}\r\n                                                                                         onClick={() => showBookTickets(t.sessionId, n.code)}>\r\n                                                                        {t.showTime}\r\n                                                                                {/*  <div className='popup'>\r\n                                                                            Hello {t.showTime}\r\n                                                                        </div>*/}\r\n                                                                    </span>\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilmSchedule;"],"names":["useState","lsCity","setLsCity","lsCinema","setlsCinema","schedule","useSelector","dataSchedule","city","setCity","today","getToday","startDate","setStartDate","cinema","setCinema","dateFormat","filterSchedule","setFilterSchedule","cinemaFilterArr","setCinemaFilterArr","result","res","cinemaCityId","nav","useNavigate","useEffect","filter","n","cityId","map","push","includes","id","tmpArr","tmpId","dates","d","showDate","i","length","fetch","then","json","data","className","xs","sm","xl","defaultValue","style","width","size","onChange","event","value","name","allowClear","date","dateString","format","dayjs","placeholder","bundles","b","span","version","Sub","caption","sessions","t","onClick","sessionId","cinemaCode","code","localStorage","removeItem","showTime"],"sourceRoot":""}